{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x4961c59f2f329162301d17e95E1e036dfc2D4163",
    "txHash": "0x33d8012fad7034c740358a50a1e41cf7f56724a09bbf2348cb7ad04cc71d0568"
  },
  "proxies": [
    {
      "address": "0x8d16ea6C3dD5d01d9637C95A4A0e98648bC0DA5F",
      "txHash": "0x29b958763c7e57b31f73c637addfbfc57ca139b40f036b2baad848800f56a764",
      "kind": "transparent"
    },
    {
      "address": "0xCa5ac8A55649695df63f0dae80273DD8DF9aEE00",
      "txHash": "0x69b3e06c37bdacb26653146b78887760f7dc0b24b98be6949f46c67a8583d5d6",
      "kind": "transparent"
    },
    {
      "address": "0x3658957A169dAADA2435789aBF3812474b20a4E2",
      "txHash": "0x00f094af4f526b4c4ef1c5f7c48582a47f511a6616bc86b646a329642fa54cb4",
      "kind": "transparent"
    },
    {
      "address": "0x29dccbD367b3634577415E8cD596363c4B057e4A",
      "txHash": "0xb882deccd2442df138d462587653fad1de7a96e9d618b2e5ffc8317bed55fba2",
      "kind": "transparent"
    },
    {
      "address": "0x93845ae46B20FA8EF7A33b69d948F395bB839D22",
      "txHash": "0xe3c5d9816a78c7cd6655592b4434c5c3febfb31faa9b198ea13d744c176c4e96",
      "kind": "transparent"
    },
    {
      "address": "0x1D66DB2B404588119288EdA5F1860db133A70908",
      "txHash": "0x8d7afd8a44cf46f477ddb80c772b0ec0b65c13892680d2c4db16b658238ad191",
      "kind": "transparent"
    },
    {
      "address": "0x7dbd4cfEe52395E8066Af1F714A53596A6e6Ca61",
      "txHash": "0x0a737c537182658380f33070e0993d4069868ddfce6c00ad934b204dc86e8cd9",
      "kind": "transparent"
    }
  ],
  "impls": {
    "a4dee7b40c4a3cff5e0284dc31ed5b3acfd01257082966a4d426f1efd33f4a52": {
      "address": "0xbb159212A5f879b6309BeeC65CC92D19f38EA030",
      "txHash": "0x500a13c3481460fe2790ecb1c2164c76bdbef233c6ce76af48d92c18cf819a12",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "Issuer",
            "label": "certificateTopic",
            "type": "t_uint256",
            "src": "../project:/contracts/issuer.sol:22"
          },
          {
            "contract": "Issuer",
            "label": "registry",
            "type": "t_contract(Registry)3098",
            "src": "../project:/contracts/issuer.sol:25"
          },
          {
            "contract": "Issuer",
            "label": "_certificationRequests",
            "type": "t_mapping(t_uint256,t_struct(CertificationRequest)3174_storage)",
            "src": "../project:/contracts/issuer.sol:28"
          },
          {
            "contract": "Issuer",
            "label": "requestToCertificate",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/issuer.sol:31"
          },
          {
            "contract": "Issuer",
            "label": "_latestCertificationRequestId",
            "type": "t_uint256",
            "src": "../project:/contracts/issuer.sol:34"
          },
          {
            "contract": "Issuer",
            "label": "_revokedCertificates",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/issuer.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(Registry)3098": {
            "label": "contract Registry"
          },
          "t_mapping(t_uint256,t_struct(CertificationRequest)3174_storage)": {
            "label": "mapping(uint256 => struct Issuer.CertificationRequest)"
          },
          "t_struct(CertificationRequest)3174_storage": {
            "label": "struct Issuer.CertificationRequest",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "data",
                "type": "t_bytes_storage"
              },
              {
                "label": "approved",
                "type": "t_bool"
              },
              {
                "label": "revoked",
                "type": "t_bool"
              },
              {
                "label": "sender",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "9090ee1396e35f9c3eaa348c1e859c1d0ad9718b6863de92cac3ccd048891d7c": {
      "address": "0xc110eFBC1Ee569F0d51E5a2273540a68BB31Cb32",
      "txHash": "0x4feebe2b68fdd20fb2f8f7fd073dbf1e3badb60ed423748c8927db3ee25a4a0a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "Issuer",
            "label": "certificateTopic",
            "type": "t_uint256",
            "src": "../project:/contracts/Issuer.sol:15"
          },
          {
            "contract": "Issuer",
            "label": "registry",
            "type": "t_contract(Registry)4463",
            "src": "../project:/contracts/Issuer.sol:18"
          },
          {
            "contract": "Issuer",
            "label": "privateIssuer",
            "type": "t_address",
            "src": "../project:/contracts/Issuer.sol:21"
          },
          {
            "contract": "Issuer",
            "label": "_certificationRequests",
            "type": "t_mapping(t_uint256,t_struct(CertificationRequest)2755_storage)",
            "src": "../project:/contracts/Issuer.sol:24"
          },
          {
            "contract": "Issuer",
            "label": "_requestToCertificate",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/Issuer.sol:27"
          },
          {
            "contract": "Issuer",
            "label": "_latestCertificationRequestId",
            "type": "t_uint256",
            "src": "../project:/contracts/Issuer.sol:30"
          },
          {
            "contract": "Issuer",
            "label": "_revokedCertificates",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/Issuer.sol:33"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(Registry)4463": {
            "label": "contract Registry"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(CertificationRequest)2755_storage)": {
            "label": "mapping(uint256 => struct Issuer.CertificationRequest)"
          },
          "t_struct(CertificationRequest)2755_storage": {
            "label": "struct Issuer.CertificationRequest",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "data",
                "type": "t_bytes_storage"
              },
              {
                "label": "approved",
                "type": "t_bool"
              },
              {
                "label": "revoked",
                "type": "t_bool"
              },
              {
                "label": "sender",
                "type": "t_address"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "f20e22a62ec065dedf921c1ea59958f2f2478a80f3cebd92bff1a9366752d8b1": {
      "address": "0x7AaA4d604559457d1C71718C411Ec631BEb3AB96",
      "txHash": "0x45657bad6b4c3b8f0622aff0ad02afc822a97c7d40f4cc9fd1e8af1adce14eae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "PrivateIssuer",
            "label": "issuer",
            "type": "t_contract(Issuer)3246",
            "src": "../project:/contracts/Migrations.sol:24"
          },
          {
            "contract": "PrivateIssuer",
            "label": "registry",
            "type": "t_contract(Registry)4463",
            "src": "../project:/contracts/Migrations.sol:24"
          },
          {
            "contract": "PrivateIssuer",
            "label": "_requestMigrateToPublicStorage",
            "type": "t_mapping(t_uint256,t_struct(RequestStateChange)3301_storage)",
            "src": "../project:/contracts/Migrations.sol:24"
          },
          {
            "contract": "PrivateIssuer",
            "label": "_requestPrivateTransferStorage",
            "type": "t_mapping(t_uint256,t_struct(PrivateTransferRequest)3292_storage)",
            "src": "../project:/contracts/Migrations.sol:24"
          },
          {
            "contract": "PrivateIssuer",
            "label": "_migrations",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/Migrations.sol:24"
          },
          {
            "contract": "PrivateIssuer",
            "label": "_commitments",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "../project:/contracts/Migrations.sol:24"
          },
          {
            "contract": "PrivateIssuer",
            "label": "_requestMigrateToPublicNonce",
            "type": "t_uint256",
            "src": "../project:/contracts/Migrations.sol:24"
          },
          {
            "contract": "PrivateIssuer",
            "label": "_requestPrivateTransferNonce",
            "type": "t_uint256",
            "src": "../project:/contracts/Migrations.sol:24"
          }
        ],
        "types": {
          "t_contract(Issuer)3246": {
            "label": "contract Issuer"
          },
          "t_contract(Registry)4463": {
            "label": "contract Registry"
          },
          "t_mapping(t_uint256,t_struct(RequestStateChange)3301_storage)": {
            "label": "mapping(uint256 => struct PrivateIssuer.RequestStateChange)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(RequestStateChange)3301_storage": {
            "label": "struct PrivateIssuer.RequestStateChange",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "certificateId",
                "type": "t_uint256"
              },
              {
                "label": "hash",
                "type": "t_bytes32"
              },
              {
                "label": "approved",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(PrivateTransferRequest)3292_storage)": {
            "label": "mapping(uint256 => struct PrivateIssuer.PrivateTransferRequest)"
          },
          "t_struct(PrivateTransferRequest)3292_storage": {
            "label": "struct PrivateIssuer.PrivateTransferRequest",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "hash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "701cf35de4e0f10ec32165ccc672e50ebc719ab97eb11448c029b05d35d73ec3": {
      "address": "0x44055D7beb0e2e2Ca8B342F8b1D8aCd311441E2e",
      "txHash": "0x38b93809283ccf902aaf18f507ad028fff2695e948616ce6e56e7bb876e557d1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "Issuer",
            "label": "certificateTopic",
            "type": "t_uint256",
            "src": "../project:/contracts/Issuer.sol:16"
          },
          {
            "contract": "Issuer",
            "label": "registry",
            "type": "t_contract(Registry)4475",
            "src": "../project:/contracts/Issuer.sol:19"
          },
          {
            "contract": "Issuer",
            "label": "privateIssuer",
            "type": "t_address",
            "src": "../project:/contracts/Issuer.sol:22"
          },
          {
            "contract": "Issuer",
            "label": "_certificationRequests",
            "type": "t_mapping(t_uint256,t_struct(CertificationRequest)2755_storage)",
            "src": "../project:/contracts/Issuer.sol:25"
          },
          {
            "contract": "Issuer",
            "label": "_requestToCertificate",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/Issuer.sol:28"
          },
          {
            "contract": "Issuer",
            "label": "_latestCertificationRequestId",
            "type": "t_uint256",
            "src": "../project:/contracts/Issuer.sol:31"
          },
          {
            "contract": "Issuer",
            "label": "_revokedCertificates",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/Issuer.sol:34"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(Registry)4475": {
            "label": "contract Registry"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(CertificationRequest)2755_storage)": {
            "label": "mapping(uint256 => struct Issuer.CertificationRequest)"
          },
          "t_struct(CertificationRequest)2755_storage": {
            "label": "struct Issuer.CertificationRequest",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "data",
                "type": "t_bytes_storage"
              },
              {
                "label": "approved",
                "type": "t_bool"
              },
              {
                "label": "revoked",
                "type": "t_bool"
              },
              {
                "label": "sender",
                "type": "t_address"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "ba7011184ab667605ec5fab6429d0e0454a59be517b2feb8a024d871b223b29e": {
      "address": "0xfc5B4Be44FDC3f4786C9aba22c58EA5692F269A7",
      "txHash": "0x7f63b479ad286f362c66d7b32f781ce3be4b4ccd01e93f515711f692c570b547",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "Issuer",
            "label": "certificateTopic",
            "type": "t_uint256",
            "src": "../project:/contracts/Issuer.sol:15"
          },
          {
            "contract": "Issuer",
            "label": "registry",
            "type": "t_contract(RegistryExtended)6015",
            "src": "../project:/contracts/Issuer.sol:18"
          },
          {
            "contract": "Issuer",
            "label": "privateIssuer",
            "type": "t_address",
            "src": "../project:/contracts/Issuer.sol:21"
          },
          {
            "contract": "Issuer",
            "label": "_certificationRequests",
            "type": "t_mapping(t_uint256,t_struct(CertificationRequest)2836_storage)",
            "src": "../project:/contracts/Issuer.sol:24"
          },
          {
            "contract": "Issuer",
            "label": "_requestToCertificate",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/Issuer.sol:27"
          },
          {
            "contract": "Issuer",
            "label": "_latestCertificationRequestId",
            "type": "t_uint256",
            "src": "../project:/contracts/Issuer.sol:30"
          },
          {
            "contract": "Issuer",
            "label": "_revokedCertificates",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/Issuer.sol:33"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(RegistryExtended)6015": {
            "label": "contract RegistryExtended"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(CertificationRequest)2836_storage)": {
            "label": "mapping(uint256 => struct Issuer.CertificationRequest)"
          },
          "t_struct(CertificationRequest)2836_storage": {
            "label": "struct Issuer.CertificationRequest",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "data",
                "type": "t_bytes_storage"
              },
              {
                "label": "approved",
                "type": "t_bool"
              },
              {
                "label": "revoked",
                "type": "t_bool"
              },
              {
                "label": "sender",
                "type": "t_address"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "e2ce57e3283fdfef2077d22b77d6a89ca01f6c27cb25521a290b9d494299e7c0": {
      "address": "0x51f4F878A6839bF33D527f7759e18E2501fC6AC8",
      "txHash": "0xa21c9ab4a6aea43bff46038ded64e66f6aa8cb6d45d0aba093380c8b33903592",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "PrivateIssuer",
            "label": "issuer",
            "type": "t_contract(Issuer)3727",
            "src": "../project:/contracts/Migrations.sol:24"
          },
          {
            "contract": "PrivateIssuer",
            "label": "registry",
            "type": "t_contract(Registry)5332",
            "src": "../project:/contracts/Migrations.sol:24"
          },
          {
            "contract": "PrivateIssuer",
            "label": "_requestMigrateToPublicStorage",
            "type": "t_mapping(t_uint256,t_struct(RequestStateChange)3782_storage)",
            "src": "../project:/contracts/Migrations.sol:24"
          },
          {
            "contract": "PrivateIssuer",
            "label": "_requestPrivateTransferStorage",
            "type": "t_mapping(t_uint256,t_struct(PrivateTransferRequest)3773_storage)",
            "src": "../project:/contracts/Migrations.sol:24"
          },
          {
            "contract": "PrivateIssuer",
            "label": "_migrations",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/Migrations.sol:24"
          },
          {
            "contract": "PrivateIssuer",
            "label": "_commitments",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "../project:/contracts/Migrations.sol:24"
          },
          {
            "contract": "PrivateIssuer",
            "label": "_requestMigrateToPublicNonce",
            "type": "t_uint256",
            "src": "../project:/contracts/Migrations.sol:24"
          },
          {
            "contract": "PrivateIssuer",
            "label": "_requestPrivateTransferNonce",
            "type": "t_uint256",
            "src": "../project:/contracts/Migrations.sol:24"
          }
        ],
        "types": {
          "t_contract(Issuer)3727": {
            "label": "contract Issuer"
          },
          "t_contract(Registry)5332": {
            "label": "contract Registry"
          },
          "t_mapping(t_uint256,t_struct(RequestStateChange)3782_storage)": {
            "label": "mapping(uint256 => struct PrivateIssuer.RequestStateChange)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(RequestStateChange)3782_storage": {
            "label": "struct PrivateIssuer.RequestStateChange",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "certificateId",
                "type": "t_uint256"
              },
              {
                "label": "hash",
                "type": "t_bytes32"
              },
              {
                "label": "approved",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(PrivateTransferRequest)3773_storage)": {
            "label": "mapping(uint256 => struct PrivateIssuer.PrivateTransferRequest)"
          },
          "t_struct(PrivateTransferRequest)3773_storage": {
            "label": "struct PrivateIssuer.PrivateTransferRequest",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "hash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    }
  }
}
